
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Fungsi Bantuan ---
    // Apakah pengguna sudah terautentikasi?
    function isAuth() {
      return request.auth != null;
    }

    // Apakah ID pengguna yang meminta cocok dengan userId yang diberikan?
    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    // Apakah pengguna adalah admin?
    // Fungsi ini membaca peran pengguna dari dokumen mereka di koleksi 'users'.
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Apakah pengguna adalah guru?
    function isTeacher() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'guru';
    }

    // --- Aturan Koleksi ---

    // Pengguna dapat membaca profil mereka sendiri. Admin dapat membaca/menulis profil apa pun.
    // Penulisan dibatasi untuk mencegah pengguna mengubah peran mereka sendiri.
    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      // Izinkan pengguna untuk memperbarui data mereka sendiri, tetapi bukan peran mereka.
      // Admin dapat memperbarui apa pun.
      allow update: if (isUser(userId) && !("role" in request.resource.data)) || isAdmin();
      // Hanya admin yang dapat membuat atau menghapus dokumen pengguna secara langsung.
      allow create, delete: if isAdmin();
    }
    
    // Guru memiliki profil terpisah yang lebih detail.
    // Aturan serupa dengan koleksi /users.
    match /teachers/{userId} {
        allow read: if isUser(userId) || isAdmin();
        // Hanya admin yang dapat mengubah data guru demi integritas.
        allow write: if isAdmin(); 
    }

    // Catatan kehadiran.
    match /photo_attendances/{attendanceId} {
      // BACA (READ):
      // - Pengguna dapat membaca catatan mereka sendiri.
      // - Guru dapat membaca catatan siswa.
      // - Admin dapat membaca semua catatan.
      allow read: if isUser(resource.data.userId) || 
                   (isTeacher() && resource.data.role == 'siswa') || 
                   isAdmin();

      // BUAT (CREATE):
      // - Setiap pengguna yang terautentikasi dapat membuat catatan kehadiran MEREKA SENDIRI.
      // - Kita harus memvalidasi userId dalam dokumen cocok dengan ID pembuatnya.
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;

      // PERBARUI (UPDATE):
      // - Pengguna dapat memperbarui waktu absen keluar MEREKA SENDIRI.
      // - Mencegah mereka mengubah status, pengguna, atau tanda kecurangan.
      // - Admin dapat memperbarui bidang apa pun.
      allow update: if (isUser(resource.data.userId) && !("status" in request.resource.data) && !("isFraudulent" in request.resource.data) && !("userId" in request.resource.data)) || isAdmin();
      
      // HAPUS (DELETE):
      // - Hanya admin yang dapat menghapus catatan kehadiran.
      allow delete: if isAdmin();
    }

    // Pengaturan dapat dibaca oleh setiap pengguna yang terautentikasi, tetapi hanya ditulis oleh admin.
    match /settings/{setting} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
  }
}
